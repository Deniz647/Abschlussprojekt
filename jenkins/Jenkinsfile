pipeline {
    agent any

    environment {
        ACR_NAME = "skyerededucation.azurecr.io"
    }

    stages {
        stage("Build Backend") {
            steps {
                dir("backend") {
                    sh "mvn clean install -Pdev -DskipTests"
                }
            }
        }

        stage("Build Frontend") {
            steps {
                dir("frontend") {
                    sh "npm install"
                    sh "npm run build"
                }
            }
        }

        stage("Test Backend") {
            steps {
                dir("backend") {
                    sh "mvn test -Pdev"
                }
            }
        }

        stage("Test Frontend") {
            steps {
                dir("frontend") {
                    sh "npm test"
                }
            }
        }

        stage("Docker Login") {
            steps {
                withCredentials([usernamePassword(credentialsId: 'acr-credentials', usernameVariable: 'ACR_USER', passwordVariable: 'ACR_PASS')]) {
                    sh "echo $ACR_PASS | docker login $ACR_NAME -u $ACR_USER --password-stdin"
                }
            }
        }

        stage("Docker Build") {
            steps {
                script {
                    sh "docker build -t $ACR_NAME/abschlussprojekt-backend:latest -f backend/Dockerfile ./backend"
                    sh "docker build -t $ACR_NAME/abschlussprojekt-frontend:latest -f frontend/Dockerfile ./frontend"
                }
            }
        }

        stage("Docker Push") {
            steps {
                script {
                    sh "docker push $ACR_NAME/abschlussprojekt-backend:latest"
                    sh "docker push $ACR_NAME/abschlussprojekt-frontend:latest"
                }
            }
        }

        stage("Deploy Dev") {
            steps {
                script {
                    sh "kubectl --kubeconfig=${WORKSPACE}/denizcan-dev.conf apply -f kubernetes/frontend-deployment-dev.yaml --namespace=denizcan-dev"
                    sh "kubectl --kubeconfig=${WORKSPACE}/denizcan-dev.conf apply -f kubernetes/frontend-service-dev.yaml --namespace=denizcan-dev"
                    sh "kubectl --kubeconfig=${WORKSPACE}/denizcan-dev.conf apply -f kubernetes/backend-deployment-dev.yaml --namespace=denizcan-dev"
                    sh "kubectl --kubeconfig=${WORKSPACE}/denizcan-dev.conf apply -f kubernetes/backend-service-dev.yaml --namespace=denizcan-dev"
                }
            }
        }

        stage("Manual Approval") {
            steps {
                script {
                    input message: "Soll das Deployment in Prod gestartet werden?", ok: "Ja, weiter mit Prod"
                }
            }
        }

        stage("Deploy Prod") {
            steps {
                script {
                    sh "kubectl --kubeconfig=${WORKSPACE}/denizcan-prod.conf apply -f kubernetes/frontend-deployment-prod.yaml --namespace=denizcan-prod"
                    sh "kubectl --kubeconfig=${WORKSPACE}/denizcan-prod.conf apply -f kubernetes/frontend-service-prod.yaml --namespace=denizcan-prod"
                    sh "kubectl --kubeconfig=${WORKSPACE}/denizcan-prod.conf apply -f kubernetes/backend-deployment-prod.yaml --namespace=denizcan-prod"
                    sh "kubectl --kubeconfig=${WORKSPACE}/denizcan-prod.conf apply -f kubernetes/backend-service-prod.yaml --namespace=denizcan-prod"
                }
            }
        }
    }
}
